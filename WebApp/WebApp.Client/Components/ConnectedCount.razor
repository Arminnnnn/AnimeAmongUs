@rendermode InteractiveWebAssembly
@namespace Components
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable

@if (IsConnected)
{
    <h1>Player count: @_playerCount</h1>
}
else
{
    <h1>Player count: ERROR</h1>
}

@code {
    private HubConnection? _hubConnection;
    private int _playerCount;
    
    private bool IsConnected => _hubConnection?.State == HubConnectionState.Connected;
    
    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/connectedHub"))
            .Build();

        _hubConnection.On<int>("OnConnected", (playerCount) =>
        {
            _playerCount = playerCount;
            InvokeAsync(StateHasChanged);
        });

        await _hubConnection.StartAsync();
    }
    
    public async ValueTask DisposeAsync()
    {
        if (_hubConnection != null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}